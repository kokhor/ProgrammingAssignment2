{
    "contents" : "## The purpose of the functions is to store some repeating processed data \n## in the memory (i.e. Cache) in order to avoid re-calculations, \n## and therefore effectively producing faster results.\n\n\n## The two functions are 1) makeCacheMatrix and\n##                       2) cacheSolve\n\n## To execute these functions, users first have to load cachematrix.R, \n## then run makeCacheMatrix function and finally cacheSolve function.\n## \n## e.g. at console >source('cachematrix.R')\n##                 >a <- makeCacheMatrix(matrix(c(1,2,3,4),2,2))\n##                 >cacheSolve(a)\n## Output as below\n##     [,1] [,2]\n##[1,]   -2  1.5\n##[2,]    1 -0.5\n\nmakeCacheMatrix <- function(x = matrix()) {\n \n        ## This function creates a special \"matrix\" object\n        ## which stores or caches data of the inverse of the matrix\n        \n        m <- NULL\n        set <- function(y) {\n                x <<- y\n                m <<- NULL\n        }\n        get <- function() x\n        setinvm <- function(invm) m <<- invm\n        getinvm <- function() m\n        list(set = set, get = get,\n             setinvm = setinvm,\n             getinvm = getinvm)                                   \n\n}\n\n\ncacheSolve <- function(x, ...) {\n        ## Getting Inverse Matrix Cached Data or \n        ## calculate Inverse of the matrix if no Cached Data \n        \n        ## Return a matrix that is the inverse of 'x'\n       \n        m <- x$getinvm()\n        if(!is.null(m)) {\n                message(\"getting inverse matrix cached data\")\n                return(m)\n        }\n        data <- x$get()\n        m <- solve(data, ...)\n        x$setinvm(m)\n        m\n}\n",
    "created" : 1434515113829.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3270572783",
    "id" : "85FA7E93",
    "lastKnownWriteTime" : 1434556789,
    "path" : "C:/Users/kokhor/R_PprogAssignmTwo/ProgrammingAssignment2/cachematrix.R",
    "project_path" : "cachematrix.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}